name: Boson Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - name: Install dependencies
        run: brew install curl
      - name: Build C++ library (macOS)
        run: |
          mkdir build && cd build
          cmake ..
          make
      - name: Build CLI (macOS)
        run: |
          cd cli
          VERSION=${GITHUB_REF#refs/tags/v}
          BUILD_DATE=$(date -u +"%Y-%m-%d")
          GIT_COMMIT=$(git rev-parse --short HEAD)
          go build -ldflags="-X 'github.com/S1D007/boson/cmd.Version=$VERSION' -X 'github.com/S1D007/boson/cmd.BuildDate=$BUILD_DATE' -X 'github.com/S1D007/boson/cmd.GitCommit=$GIT_COMMIT'" -o boson
      - name: Package (macOS)
        run: |
          mkdir -p dist/include
          cp -r include/boson dist/include/
          cp -r include/external dist/include/
          cp -r cli/templates dist/
          cp build/src/libboson.a dist/
          cp cli/boson dist/
          cd dist && tar -czvf boson-macos.tar.gz *
      - uses: actions/upload-artifact@v4
        with:
          name: boson-macos
          path: dist/boson-macos.tar.gz

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y libcurl4-openssl-dev
      - name: Build C++ library (Linux)
        run: |
          mkdir build && cd build
          cmake ..
          make
      - name: Build CLI (Linux)
        run: |
          cd cli
          VERSION=${GITHUB_REF#refs/tags/v}
          BUILD_DATE=$(date -u +"%Y-%m-%d")
          GIT_COMMIT=$(git rev-parse --short HEAD)
          go build -ldflags="-X 'github.com/S1D007/boson/cmd.Version=$VERSION' -X 'github.com/S1D007/boson/cmd.BuildDate=$BUILD_DATE' -X 'github.com/S1D007/boson/cmd.GitCommit=$GIT_COMMIT'" -o boson
      - name: Package (Linux)
        run: |
          mkdir -p dist/include
          cp -r include/boson dist/include/
          cp -r include/external dist/include/
          cp -r cli/templates dist/
          cp build/src/libboson.a dist/
          cp cli/boson dist/
          cd dist && tar -czvf boson-linux.tar.gz *
      - uses: actions/upload-artifact@v4
        with:
          name: boson-linux
          path: dist/boson-linux.tar.gz

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - name: Install vcpkg and curl
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          .\vcpkg\bootstrap-vcpkg.bat
          .\vcpkg\vcpkg.exe install curl
      - name: Build C++ library (Windows)
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}\\vcpkg\\scripts\\buildsystems\\vcpkg.cmake" -DVCPKG_TARGET_TRIPLET=x64-windows ..
          cmake --build .
      - name: Build CLI (Windows)
        run: |
          cd cli
          $VERSION = $env:GITHUB_REF -replace 'refs/tags/v', ''
          $BUILD_DATE = Get-Date -Format "yyyy-MM-dd"
          $GIT_COMMIT = git rev-parse --short HEAD
          go build -ldflags="-X 'github.com/S1D007/boson/cmd.Version=$VERSION' -X 'github.com/S1D007/boson/cmd.BuildDate=$BUILD_DATE' -X 'github.com/S1D007/boson/cmd.GitCommit=$GIT_COMMIT'" -o boson.exe
      - name: Package (Windows)
        run: |
          mkdir dist
          xcopy include\boson dist\include\boson /E /I
          xcopy include\external dist\include\external /E /I
          xcopy cli\templates dist\templates /E /I
          copy build\src\Debug\boson.lib dist\
          copy cli\boson.exe dist\
          cd dist && tar -czvf boson-windows.tar.gz *
      - uses: actions/upload-artifact@v4
        with:
          name: boson-windows
          path: dist/boson-windows.tar.gz

  release:
    needs: [build-macos, build-linux, build-windows]
    runs-on: ubuntu-latest
    permissions:
        contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/boson-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}